//  AngularJs Alias functions
var _element = angular.element,
    _each = angular.forEach,
    _extend = angular.extend;

var userAdmin = angular.module('userAdmin', ['ngRoute','userServices','userFilters','ngAnimate', 'textAngular', 'ui.bootstrap']);

userAdmin.config(['$routeProvider', '$locationProvider',
    function($routeProvider, $locationProvider) {
        $routeProvider
            .when('/my-account/', {
                templateUrl: theme_dir+'js/angular/views/dashboard.html'
            })
            .when('/my-account/settings/', {
                templateUrl: theme_dir+'js/angular/views/settings.html'
            })
            .when('/my-account/teams/', {
                templateUrl: theme_dir+'js/angular/views/teams.html'
            })
            .when('/my-account/new-campaign/', {
                templateUrl: theme_dir+'js/angular/views/newCampaign.html',
                controller: 'NewCampaignCtrl'
            });

        // configure html5 to get links working on jsfiddle
        $locationProvider.html5Mode(true);
    }]);

userAdmin.controller('AppCtrl', ['$scope', '$rootScope', 'User', 'UserServices', 'Team', 'ResponseMessage', 'App', 'UserCampaigns',
    function($scope, $rootScope, User, UserServices, Team, ResponseMessage, App, UserCampaigns) {

        $scope.host = home_url;

        $scope.app = App;
//        console.log('App', $scope.app);

        $scope.user = User;
//        console.log('User', User);

        $scope.userMessages = ResponseMessage.getMessages('User');
//        console.log('userMessages', $scope.userMessages);

        $scope.afterCreateTeam = function(response) {
            if(!response.hasOwnProperty('errors')) {
                $scope.newTeamName = '';
            }
        };

        $rootScope.campaignView = 'active';
        $scope.userCampaigns = UserCampaigns;
//        console.log('userCampaigns', $scope.userCampaigns);


//        $scope.afterCloseCampaign = function(response) {
//            console.log(response);
//        }


        $scope.team = Team;
        $rootScope.team = Team;
        $scope.inviteMemebers = false;
//        $scope.$watch('team.toManage', function(newValue, oldValue) {
//            console.log(newValue, oldValue);
//            if(newValue) {
//                console.log('user.team_leads.'+newValue.id);
//                var _watchThis = 'user.team_leads.'+newValue.id,
//                    _watch = $scope.$watch(_watchThis, function(newValue, oldValue) {
//                        console.log(newValue, oldValue);
//                        if(!newValue) {
//                            $scope.team.toManage = '';
//                            _watch();
//                        }
//                    });
//            }
//        });
        $scope.newTeamName = '';

    }]);

userAdmin.directive('campaignInfoBlock',
    function() {
        return {
            restrict: 'E',
            templateUrl: theme_dir+'js/angular/directives/campaignInfoBlock.html'
        };
    });

userAdmin.directive('completionBar',
    function($timeout) {
        return function(scope, element, attr) {
            $timeout(function() {
                element.get(0).style.width = scope.campaign.completion_percentage*100+'%';
            }, 500+(150*scope.$index));
        };
    });

userAdmin.directive('currency', ['$filter',
    function($filter) {
        return {
            restrict: 'A',
            require: 'ngModel',
            link: function(scope, element, attrs, controller) {
                function currency(value) {
                    if(value && value[0] != '$') {
                        controller.$setViewValue('$' + value);
                        controller.$render();
                        return '$' + value;
                    }
                    else
                        return value;
                }

                controller.$formatters.push(currency);
                controller.$parsers.push(currency);
            }
        }
    }]);


//  Start: New Campaign
    userAdmin.controller('NewCampaignCtrl', ['$scope', '$location', 'User',
        function($scope, $location, User) {

            $scope.app = $scope.$parent.app;
            $scope.user = $scope.$parent.user;

            $scope.newCampaign = {};
            $scope.teamToCreate = "";

            $scope.afterCreateTeam = function(response) {
                if(!response.hasOwnProperty('errors')) {
                    _each(response.add_teams, function(teamName, teamId) {
                        $scope.newCampaign.team = teamId;
                    });
                }

                $scope.foward(1);
            };

            $scope.afterLaunchCampaign = function(response) {
                var link_parent = _element(document.getElementById('dashboard')),
                    link = link_parent.find('a');

//                console.log(link_parent, link);

                $location.path( link.attr('href').replace(home_url, '') );

//                _element(document.getElementById('dashboard')).find('a').triggerHandler('click');
            }

            $scope.goalValid = function() {
                return /^\$[1-9]/.test($scope.newCampaign.goal);
            };

            $scope.$watch('currentStageIndex', function(newValue) {
                if(newValue == 2) {
                    if($_GET['team'] && User.teams.hasOwnProperty($_GET['team'])) {
                        $scope.newCampaign.team = $_GET['team'];
                        $scope.newCampaign.type = 'group';
                        $scope.forward(2);
                    }
                }
                console.log($scope.newCampaign);
            });

            if($_GET['campaign']) {
                console.log($_GET['campaign']);
            }

        }]);

    userAdmin.directive('userCampaignType',
        function() {
            return {
                restrict: 'E',
                templateUrl: theme_dir+'js/angular/directives/newCampaign/userCampaignType.html',
            };
        });

    userAdmin.directive('stages',
        function() {
            return {
                restrict: 'A',
                controller: function($scope, $element) {

                    var _stages = {},
                        _stagesOrder = [],
                        _validate;

                    // Stage validation function
                    _validateScope = function($stage) {

                        if(!$stage.validate) return true;

                        var _validation = $stage.$eval( $stage.validate );

                        if(typeof _validation == 'object') {
                            var _pass = true;

                            _each(_validation, function(_toValidate) {


                                // Skip the check if it's already failed, otherwise validate the next item
                                !_pass||(_pass=Boolean(_toValidate));
                            });

                            return _pass;
                        }

                        return Boolean(_validation);
                    }

                    $scope.currentStage;
                    $scope.currentStageIndex;
                    $scope.validation = [];

                    $scope.selectStage = function(stage) {

                        if($scope.currentStage) {
                            _stages[$scope.currentStage].selected = false;
                        }

                        if(typeof stage == 'number') {
                            $scope.currentStageIndex = stage;
                            $scope.currentStage = _stagesOrder[stage];
                        } else {
                            $scope.currentStage = stage.$id;
                            $scope.currentStageIndex = _stagesOrder.indexOf($scope.currentStage);
                        }

                        _stages[$scope.currentStage].selected = true;
                    };

                    $scope.validateStage = function(stage) {
                        var _currentIndex = (typeof stage == 'number')||_stagesOrder.indexOf( $scope.currentStage );

                        $scope.validation[_currentIndex] = _validateScope( _stages[ $scope.currentStage ] );
                    }

                    $scope.forward = function(number) {

                        number||(number = 1);

                        $scope.selectStage( $scope.currentStageIndex + number);

                        $scope.validation[ $scope.currentStageIndex ] = _validateScope( _stages[ $scope.currentStage ] );
                    };

                    this.addStage = function(stage) {

                        var _currentIndex = _stagesOrder.length;

                        _stages[stage.$id] = stage;
                        _stagesOrder.push(stage.$id);

                        if (!$scope.currentStage) {
                            $scope.selectStage(stage);
                        }

                        $scope.validateStage(_currentIndex);
                    };

                }
            }

        });

    userAdmin.directive('stage',
        function() {

            return {
                restrict: 'A',
                require: '^stages',
                template: '<div ng-show="selected" ng-transclude></div>',
                transclude: true,
                scope: {
                    validate: '@'
                },
                link: function(scope, element, attrs, stageCtrl) {
                    stageCtrl.addStage(scope);
                }
            }

        });

    document.createElement('CAMPAIGN-SELECT-BLOCK');
    userAdmin.directive('campaignSelectBlock', ['$compile',
        function($compile) {
            return {
                restrict: 'EA',
                link: function(scope, element, attrs) {

                    var _blockScope = scope.$new(),
                        _campaign,
                        _block, _img,
                        _contentBlock, _contentWrap, _title, _description,
                        _buttonLeft, _buttonRight,
                        _buttons;

                    scope.$watch(attrs.ngModel, function(newValue) {
                        if(newValue && $_GET['campaign'] && newValue.ID == $_GET['campaign']) {
                            scope.$parent.$parent.newCampaign = {
                                campaign: newValue.ID,
                                campaign_title: newValue.post_title,
                                image: newValue.image.src,
                                status: 'active'
                            }
                            scope.$parent.$parent.forward(1);
                        };
                    });

                    _blockScope.campaign = _campaign = scope.$eval(attrs.ngModel);
                    _blockScope.selectNewCampaign = function(campaign) {
                        scope.$parent.$parent.newCampaign = {
                            campaign: campaign.ID,
                            campaign_title: campaign.post_title,
                            image: campaign.image.src,
                            status: 'active'
                        };
                        scope.$parent.$parent.forward(1);
                    };

                    //  Containing Block Element
                    _block = _element('<div></div>');
                    element.append(_block);

                    //  Background Image
                    _img = _element('<img>');
                    _img.on('load', function(e) {
                        _block[0].style.backgroundImage =  'url(' + _campaign.image.src + ')';
                    });
                    _img.attr('src', _campaign.image.src);

                    //  Content Block
                    _contentBlock = _element('<div class="campaign-select-content"></div>');
                    _contentWrap = _element('<div></div>');

                    //  Create Title
                    _title = _element('<h2 ng-bind="campaign.post_title"></h2>');
                    _contentWrap.append(_title);

                    //  Create Description
                    _description = _element('<p ng-bind="campaign.post_excerpt"></p>');
                    _contentWrap.append(_description);

                    _contentBlock.append(_contentWrap);

                    _block.append(_contentBlock);

                    //  Buttons
                    _buttonLeft = _element('<a class="btn left"><i class="fa fa-info"></i> Learn More</a>');
                    _buttonLeft.attr('href', '{{campaign.link}}');
                    _buttonLeft.attr('target', '_self');
                    _block.append(_buttonLeft);

                    _buttonRight = _element('<button class="btn right"><i class="fa fa-flag"></i> Create</button>');
                    _buttonRight.attr('ng-click', 'selectNewCampaign(campaign)');
                    _block.append(_buttonRight);

                    $compile(_block)(_blockScope);
                }
            };
        }]);
//  End: New Campaign