var setupCampaign = angular.module('setupCampaign', ['ngRoute','userServices','userFilters','ngAnimate','textAngular']);

setupCampaign.controller('AppCtrl', ['$scope', '$filter', 'User', function($scope, $filter, User) {

    //  Start: Scope variables
        $scope.icon_dir = theme_dir + 'img/assets/icons/';

        $scope.descriptionDisabled = false;

        $scope.newTeamName = '';
        $scope.newTeamWindow = jQuery('#create-team');

        $scope.showActivities = false;
        $scope.$watch('showActivities', function(newValue) {
            var invalid = /^[0\.]*$|[a-zA-Z]/;

            if(!$scope.userCampaign.goal || invalid.test($scope.userCampaign.goal)) $scope.showActivities = false;
        });

        $scope.showActivityDetails = false;
    //  End: Scope variables

    //  Start: Get Server Information
        $scope.userCampaign = User.campaign({ id: $_GET.campaign });
        $scope.userInfo = User.info();
        //console.log($scope.userInfo);
    //  End: Get Server Information




    $scope.donationKeyDown = function(e) {
        if(e.keyCode == 13) $scope.showActivities = true;
    }

    $scope.openNewTeamWindow = function() {
        $scope.newTeamWindow.modal('show');
    }

    $scope.newTeam = function() {
        if(jQuery.inArray($scope.newTeamName, $scope.userInfo.teams) !== -1) {
            //  console.log('yes', $scope.userInfo.teams, teamName);
            //  Some error handling
        } else {
            $scope.userCampaign.team = $scope.newTeamName;
            $scope.userInfo.teams.push($scope.newTeamName);
            $scope.newTeamWindow.modal('hide');
            $scope.newTeamName = '';
        }
    }

    $scope.newTeamKeyDown = function(e) {
        if(e.keyCode == 13) $scope.newTeam();
    }

    $scope.startCampaign = function() {
        $scope.userCampaign.status = 'active';
        $scope.saveResponse = User.saveCampaign({ user_campaign: $scope.userCampaign }, function() {
            if($scope.saveResponse.hasOwnProperty('redirect')) window.location = $scope.saveResponse.redirect;
        });
    }

    $scope.deleteCampaign = function() {
        $scope.userCampaign.status = 'active';
        $scope.deleteResponse = User.deleteCampaign({ id: $scope.userCampaign.id }, function() {
            if($scope.deleteResponse.hasOwnProperty('errors')) {
                $scope.userCampaign = $scope.deleteResponse;
            } else if($scope.deleteResponse.hasOwnProperty('redirect')) {
                window.location = $scope.deleteResponse.redirect;
            }
        });
    }


}]);

//  Start: Directives
    setupCampaign.directive('userCampaignType', function() {
        return {
            restrict: 'E',
            templateUrl: theme_dir+'js/angular/directives/newCampaign/userCampaignType.html',
        };
    });
    setupCampaign.directive('userCampaignGoal', function() {
        return {
            restrict: 'E',
            templateUrl: theme_dir+'js/angular/directives/newCampaign/userCampaignGoal.html',
        };
    });
    setupCampaign.directive('userCampaignMethod', function() {
        return {
            restrict: 'E',
            templateUrl: theme_dir+'js/angular/directives/newCampaign/userCampaignMethod.html',
        };
    });
    setupCampaign.directive('userCampaignDescription', function() {
        return {
            restrict: 'E',
            templateUrl: theme_dir+'js/angular/directives/newCampaign/userCampaignDescription.html',
        };
    });
//  End: Directives